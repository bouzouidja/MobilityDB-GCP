apiVersion: v1
kind: Service
metadata:
  name: citus-workers
  labels:
    app: citus-workers
spec:
  ports:
  - port: 5432
    name: postgres
  clusterIP: None
  selector:
    app: citus-workers


---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: citus-workers
spec:
  serviceName: "citus-workers"
  replicas: 3
  selector:
    matchLabels:
      app: citus-workers
  template:
    metadata:
      labels:
        app: citus-workers

    spec:
      #terminationGracePeriodSeconds: 160
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - citus-workers
                    - citus-coordinator
              topologyKey: "kubernetes.io/hostname"
      #nodeSelector:
      #  nodetype: worker
      #topologySpreadConstraints:
      #- maxSkew: 1
      #  topologyKey: kubernetes.io/hostname
      #  whenUnsatisfiable: DoNotSchedule
      #  labelSelector:
      #    matchLabels:
      #      app: citus-workers
      containers:
      - name: mobilitydb-cloud
        #image: bouzouidja/mobilitydb-cloud:latest
        image:  europe-west1-docker.pkg.dev/distributed-postgresql-82971/sidahmed-gcp-registry/mobilitydb-cloud
        imagePullPolicy: "IfNotPresent"
        args:
            - -c
            - max_locks_per_transaction=128
            - -c
            - shared_preload_libraries=citus, postgis-3.so
            - -c
            - wal_level=logical
        ports:
        - containerPort: 5432
        #resources:
        # limits:
        #   cpu: 3500m
        #    memory: 14G
        #  requests:
        #    cpu: 3000m
        #    memory: 12G

        lifecycle:
            postStart:
              exec:
                command: 
                - /bin/sh
                - -c
                - |
                  sleep 9
                  psql -U $POSTGRES_USER -d $POSTGRES_DB --command="CREATE EXTENSION IF NOT EXISTS citus;"
                  psql -h citus-coordinator -U $POSTGRES_USER -d $POSTGRES_DB --command="SELECT * from citus_add_node('$POD_IP', 5432) where NOT EXISTS (SELECT pod_ip FROM pod_information WHERE pod_ip = '$POD_IP');"
                  psql -h citus-coordinator -U $POSTGRES_USER -d $POSTGRES_DB --command="INSERT INTO pod_information(pod_ip, nodeid, nodeport, pod_hostname ) SELECT nodename, nodeid, nodeport, '${HOSTNAME}' FROM pg_dist_node WHERE nodename = '$POD_IP' and NOT EXISTS (SELECT pod_ip FROM pod_information WHERE pod_ip = '$POD_IP') and NOT EXISTS (SELECT pod_hostname FROM pod_information WHERE pod_hostname = '${HOSTNAME}');" 
                  psql -h citus-coordinator -U $POSTGRES_USER -d $POSTGRES_DB --command="select citus_update_node((select nodeid from pod_information where pod_hostname='${HOSTNAME}'),'$POD_IP', 5432) from pg_dist_node  where nodename =(select pod_ip from pod_information  where pod_hostname='${HOSTNAME}'); UPDATE pod_information SET  pod_ip = '$POD_IP' WHERE nodeid = (select nodeid from pod_information where pod_hostname='${HOSTNAME}');" 

        #     command: ["/bin/sh", "-c", "sleep 9;printf \"local all all trust\nhost all all 127.0.0.1/32 trust\nhost all all ::1/128 trust\nhost all all 0.0.0.0/0 trust\nlocal replication all trust\nhost replication all 127.0.0.1/32 trust\nhost replication all ::1/128 trust \" > /var/lib/postgresql/data/pg_hba.conf;createdb -U $POSTGRES_USER  $POSTGRES_DB ;psql -U $POSTGRES_USER -d $POSTGRES_DB --command=\"SELECT pg_reload_conf();\"  ;psql -U $POSTGRES_USER -d $POSTGRES_DB --command=\" CREATE EXTENSION IF NOT EXISTS citus;\";psql -h citus-coordinator -U $POSTGRES_USER -d $POSTGRES_DB --command=\"SELECT * from citus_add_node('$POD_IP', 5432);\";"]
            #preStop:
            #  exec:
            #    command: ["/bin/sh", "-c", "psql -h citus-coordinator -U $POSTGRES_USER -d $POSTGRES_DB --command=\"SELECT * FROM citus_set_node_property('$POD_IP', 5432, 'shouldhaveshards', false);\";psql -h citus-coordinator -U $POSTGRES_USER -d $POSTGRES_DB --command=\"SELECT citus_rebalance_start(drain_only := true);\" ; psql -h citus-coordinator -U $POSTGRES_USER -d $POSTGRES_DB --command=\"SELECT citus_rebalance_wait();\"; psql -h citus-coordinator -U $POSTGRES_USER -d $POSTGRES_DB --command=\"SELECT * from citus_remove_node('$POD_IP', 5432);\";"]

        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_DB

        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-pv-claim-worker
      #volumes:
      #  - name: postgres-data
      #    persistentVolumeClaim:
      #      claimName: postgres-pv-claim-worker-2
  volumeClaimTemplates:
  - metadata:
      name: postgres-pv-claim-worker
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard-rwo"
      resources:
        requests:
          storage: 7Gi